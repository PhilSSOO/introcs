//1.3.42 Game simulation. In the game show Let’s Make a Deal, a contestant
// is presented with three doors. Behind one of them is a valuable prize.
// After the contestant
//        chooses a door, the host opens one of the other two doors
//        (never revealing the prize,
//        of course). The contestant is then given the opportunity to
//        switch to the other
//        unopened door. Should the contestant do so? Intuitively, it
//        might seem that the
//        contestant’s initial choice door and the other unopened door
//        are equally likely to
//        contain the prize, so there would be no incentive to switch.
//        Write a program MonteHall to test this intuition by simulation.
//        Your program should take a commandline argument n, play the game
//        n times using each of the two strategies (switch or
//        do not switch), and print the chance of success for each of
//        the two strategies

import edu.princeton.cs.algs4.StdRandom;

public class EX1342 {
    public static void Switch(int n) {
        int success = 0;
        boolean[] bb = new boolean[3];
        int rrDoorWithPriz, rrChoose, rrOpen1Door, rrSwitch = -1;

        for (int i = 0; i < n; i++) {
            // 0. set the door with prz
            rrDoorWithPriz = StdRandom.uniform(3);

            // 1. chooses a door frm 3 with eql opp
            rrChoose = StdRandom.uniform(3);
            bb[rrChoose] = true;
            // 2. the host opens one of the other two doors
            while (true) {
                rrOpen1Door = StdRandom.uniform(3);
                if (rrOpen1Door == rrChoose)
                    continue;
                else {
                    bb[rrOpen1Door] = true;
                    break;
                }
            }

            // 3. switch to the other unopened door
            for (int j = 0; j < 3; j++) {
                if (bb[j] == false) {
                    rrSwitch = j;
                }
            }
            // 4, rrSwitch == rrDoorWithPriz?
            if (rrSwitch == rrDoorWithPriz)
                success++;
        }
        System.out.println("Switch success "+success);
    }

    public static void noSwitch(int n) {
        int success = 0;
        int rrDoorWithPriz, rrChoose;

        for (int i = 0; i < n; i++) {
            // 0. set the door with prz
            rrDoorWithPriz = StdRandom.uniform(3);
            // 1. chooses a door frm 3 with eql opp
            rrChoose = StdRandom.uniform(3);

            if (rrChoose == rrDoorWithPriz)
                success++;
        }
        System.out.println("noSwitch success "+success);
    }

    public static void main(String[] args) {
        int n = 1000000000;
        System.out.println("n "+n);
        noSwitch(n);
        Switch(n);
    }
}
