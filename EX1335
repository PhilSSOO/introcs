//1.3.35 Checksum. The International Standard Book Number (ISBN)
// is a 10-digit
//        code that uniquely specifies a book. The rightmost digit
//        is a checksum digit that
//        can be uniquely determined from the other 9 digits, from
//        the condition that
//        d1 + 2d2 +3d3 + ... + 10d10 must be a multiple of 11
//        (here di denotes the ith digit
//        from the right). The checksum digit d1 can be any value
//        from 0 to 10. The ISBN
//        convention is to use the character 'X' to denote 10.
//        As an example, the checksum
//        digit corresponding to 020131452 is 5 since 5 is the only
//        value of x between 0 and
//        10 for which
//        10·0 + 9·2 + 8·0 + 7·1 + 6·3 + 5·1 +4·4 +3·5 + 2·2 + 1·x
//        is a multiple of 11. Write a program that takes a 9-digit
//        integer as a command-line
//        argument, computes the checksum, and prints the ISBN number

public class EX445 {
    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  must take care 020131452
    public static int[] getdigits(int n) {
        int largestPowerOf10LessThanN = 100000000;
        int power = largestPowerOf10LessThanN;//Math.pow(10, n-1);
        int[] digits = new int[9];

        if (n < largestPowerOf10LessThanN) { // 020131452
            largestPowerOf10LessThanN /= 10;
            power = largestPowerOf10LessThanN;
            digits[0] = 0;
            for (int i = 1; i < digits.length; i++) {
                digits[i] = n/power;
                n -= digits[i]*power;
                power /= 10;
                //  System.out.println(digits[i]);
            }
            return digits;
        }

        for (int i = 0; i < digits.length; i++) {
            digits[i] = n/power;
            n -= digits[i]*power;
            power /= 10;
            //   System.out.println(digits[i]);
        }
        return digits;
    }
    
    public static void main(String[] args) {
            int n = 20131452;
            //   System.out.println("n " + n);
            int[] digits = getdigits(n);
            int sum = 0;
            //   d1 + 2d2 +3d3 + ... + 10d10 must be a multiple of 11
//        (here di denotes the ith digit
//        from the right). The checksum digit d1 can be any value
//        from 0 to 10.
            for (int i = 0; i < digits.length; i++) {
                sum += (10-i)*digits[i];
            }
            int x = 11 - sum%11;
            for (int i = 0; i < digits.length; i++) {
                System.out.print(digits[i] + " ");
            }
            System.out.print(x);
        }

}
