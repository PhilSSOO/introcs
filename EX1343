//1.3.43 Median-of-5. Write a program that takes five distinct
// integers as commandline arguments and prints the median
// value (the value such that two of the other
//        integers are smaller and two are larger). Extra credit :
//        Solve the problem with a
//        program that compares values fewer than 7 times
//        for any given input.

public class EX1343 {
    private static int compares;
    private int[] arr;
    
    public EX1343(int a, int b, int c, int d, int e) {
        compares = 0;
        arr = new int[]{a,b,c,d,e};
    }
    // [start, end) end NOT included
    public static void sortArr(int[] arr, int start, int end) {
        for (int i = start; i < end; i++) {
            for (int j = i+1; j < end; j++) {
                compares++;
                if (arr[i] > arr[j])
                    swap(arr, i, j);
            }
        }
        System.out.println("compares after sort " + compares);
    }

    public static void swap(int[] arr,int i,int j) {
        int tmp = arr[j];
        arr[j] = arr[i];
        arr[i] = tmp;
    }

    public static int divideConquer(int[] arr) {//}, int smallestIndex) {
        int halfLen = arr.length/2;
        sortArr(arr, 0, halfLen);
        sortArr(arr, halfLen, arr.length);
        compares++; // count the following if (doing cmp)
      //  System.out.println("compares " + compares);
        if (arr[halfLen-1] < arr[halfLen]) {
            return arr[halfLen];
        }
        compares++; // count the following if (doing cmp)
      //  System.out.println("compares " + compares);
        if (arr[0] > arr[arr.length-1])
            return arr[arr.length-1];
        compares++; // count the following if (doing cmp)
      //  System.out.println("compares " + compares);
        if (arr[halfLen-1] > arr[halfLen]) {
            compares++; // count the following if (doing cmp)
         //   System.out.println("compares " + compares);
            if (arr[halfLen-1] > arr[halfLen+1])
                return arr[halfLen+1];
            else
                return arr[halfLen-1];
        }
        return -1;
    }

    public static void main(String[] args) {
        System.out.println(divideConquer(new int[]{6,5,4,3,2}));
    }
}
