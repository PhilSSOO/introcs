package a44ST;
//4.4.60 Queue with no duplicates items. Create a data type that is a
// queue, except
//        that an item may appear on the queue at most once at any
//        given time. Ignore any
//        request to insert an item if it is already on the queue

import java.util.HashSet;
import java.util.Set;

public class EX4460 {

}

//Program 4.3.6 Generic FIFO queue (linked list)
class QueueNoDupl<Item>
{
    private Node first;
    private Node last;
    private Set<Item> set = new HashSet<>();

    private class Node
    {
        Item item;
        Node next;
    }

//    public QueueNoDupl() {
//        set = new HashSet<>();
//    }

    public boolean isEmpty()
    { return (first == null); }
    public void enqueue(Item item)
    { // Insert a new node at the end of the list.
        if (set.contains(item))
            return;
        set.add(item);
        Node oldLast = last;
        last = new Node();
        last.item = item;
        last.next = null;
        if (isEmpty()) first = last;
        else oldLast.next = last;
    }
    public Item dequeue()
    { // Remove the first node from the list and return item.
        Item item = first.item;
        first = first.next;
        if (isEmpty()) last = null;
        return item;
    }
    public static void main(String[] args)
    {
        QueueNoDupl<String> queue = new QueueNoDupl<String>();
        queue.enqueue("a");
        queue.enqueue("b");
        queue.enqueue("a");
    }
}

